// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="master_master,hls_ip_2021_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvf1517-3-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.506914,HLS_SYN_LAT=300763,HLS_SYN_TPT=none,HLS_SYN_MEM=44,HLS_SYN_DSP=0,HLS_SYN_FF=5563,HLS_SYN_LUT=9279,HLS_VERSION=2021_1}" *)

module master (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        input_r_address1,
        input_r_ce1,
        input_r_q1,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0
);

parameter    ap_ST_fsm_state1 = 48'd1;
parameter    ap_ST_fsm_state2 = 48'd2;
parameter    ap_ST_fsm_state3 = 48'd4;
parameter    ap_ST_fsm_state4 = 48'd8;
parameter    ap_ST_fsm_state5 = 48'd16;
parameter    ap_ST_fsm_state6 = 48'd32;
parameter    ap_ST_fsm_state7 = 48'd64;
parameter    ap_ST_fsm_state8 = 48'd128;
parameter    ap_ST_fsm_state9 = 48'd256;
parameter    ap_ST_fsm_state10 = 48'd512;
parameter    ap_ST_fsm_state11 = 48'd1024;
parameter    ap_ST_fsm_state12 = 48'd2048;
parameter    ap_ST_fsm_state13 = 48'd4096;
parameter    ap_ST_fsm_state14 = 48'd8192;
parameter    ap_ST_fsm_state15 = 48'd16384;
parameter    ap_ST_fsm_state16 = 48'd32768;
parameter    ap_ST_fsm_state17 = 48'd65536;
parameter    ap_ST_fsm_state18 = 48'd131072;
parameter    ap_ST_fsm_state19 = 48'd262144;
parameter    ap_ST_fsm_state20 = 48'd524288;
parameter    ap_ST_fsm_state21 = 48'd1048576;
parameter    ap_ST_fsm_state22 = 48'd2097152;
parameter    ap_ST_fsm_state23 = 48'd4194304;
parameter    ap_ST_fsm_state24 = 48'd8388608;
parameter    ap_ST_fsm_state25 = 48'd16777216;
parameter    ap_ST_fsm_state26 = 48'd33554432;
parameter    ap_ST_fsm_state27 = 48'd67108864;
parameter    ap_ST_fsm_state28 = 48'd134217728;
parameter    ap_ST_fsm_state29 = 48'd268435456;
parameter    ap_ST_fsm_state30 = 48'd536870912;
parameter    ap_ST_fsm_state31 = 48'd1073741824;
parameter    ap_ST_fsm_state32 = 48'd2147483648;
parameter    ap_ST_fsm_state33 = 48'd4294967296;
parameter    ap_ST_fsm_state34 = 48'd8589934592;
parameter    ap_ST_fsm_state35 = 48'd17179869184;
parameter    ap_ST_fsm_state36 = 48'd34359738368;
parameter    ap_ST_fsm_state37 = 48'd68719476736;
parameter    ap_ST_fsm_state38 = 48'd137438953472;
parameter    ap_ST_fsm_state39 = 48'd274877906944;
parameter    ap_ST_fsm_state40 = 48'd549755813888;
parameter    ap_ST_fsm_state41 = 48'd1099511627776;
parameter    ap_ST_fsm_state42 = 48'd2199023255552;
parameter    ap_ST_fsm_state43 = 48'd4398046511104;
parameter    ap_ST_fsm_state44 = 48'd8796093022208;
parameter    ap_ST_fsm_state45 = 48'd17592186044416;
parameter    ap_ST_fsm_state46 = 48'd35184372088832;
parameter    ap_ST_fsm_state47 = 48'd70368744177664;
parameter    ap_ST_fsm_state48 = 48'd140737488355328;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [8:0] input_r_address1;
output   input_r_ce1;
input  [31:0] input_r_q1;
output  [1:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [31:0] out_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [47:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] thirdBias_address0;
reg    thirdBias_ce0;
wire   [31:0] thirdBias_q0;
wire   [11:0] firstDense_address0;
reg    firstDense_ce0;
wire   [31:0] firstDense_q0;
wire   [5:0] secondDense_address0;
reg    secondDense_ce0;
wire   [31:0] secondDense_q0;
wire   [31:0] grp_fu_377_p2;
reg   [31:0] reg_424;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state25;
wire   [31:0] grp_fu_371_p2;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state29;
reg   [63:0] reg_435;
wire    ap_CS_fsm_state30;
wire   [0:0] icmp_ln138_fu_741_p2;
wire    ap_CS_fsm_state43;
wire   [4:0] add_ln103_fu_461_p2;
reg   [4:0] add_ln103_reg_792;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln103_fu_455_p2;
reg   [3:0] den1_0_addr_reg_802;
wire   [3:0] empty_40_fu_467_p1;
reg   [3:0] empty_40_reg_807;
wire    ap_CS_fsm_state10;
wire   [11:0] empty_41_fu_494_p2;
reg   [11:0] empty_41_reg_849;
wire   [3:0] add_ln106_fu_506_p2;
reg   [3:0] add_ln106_reg_857;
wire    ap_CS_fsm_state11;
wire   [7:0] tmp_6_fu_512_p3;
reg   [7:0] tmp_6_reg_862;
wire   [0:0] icmp_ln106_fu_500_p2;
wire   [11:0] zext_ln110_fu_520_p1;
reg   [11:0] zext_ln110_reg_867;
wire   [4:0] add_ln110_fu_538_p2;
reg   [4:0] add_ln110_reg_875;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln110_fu_532_p2;
wire   [31:0] max2_0_q0;
wire    ap_CS_fsm_state13;
wire   [2:0] add_ln124_fu_641_p2;
reg   [2:0] add_ln124_reg_903;
wire    ap_CS_fsm_state21;
wire   [1:0] trunc_ln126_fu_647_p1;
reg   [1:0] trunc_ln126_reg_908;
wire   [0:0] icmp_ln124_fu_635_p2;
wire   [31:0] tmp_s_fu_651_p6;
wire   [5:0] tmp_2_fu_665_p3;
reg   [5:0] tmp_2_reg_917;
wire   [4:0] add_ln127_fu_698_p2;
reg   [4:0] add_ln127_reg_939;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln127_fu_692_p2;
wire   [31:0] den1_0_q0;
wire    ap_CS_fsm_state23;
wire   [31:0] tmp_4_fu_757_p6;
reg   [31:0] den2_0_3_load_reg_972;
reg   [31:0] den2_0_3_1_load_reg_977;
reg   [31:0] den2_0_3_2_load_reg_982;
reg   [31:0] den2_0_3_3_load_reg_987;
wire   [63:0] grp_fu_385_p1;
reg   [63:0] conv_i_reg_992;
wire    ap_CS_fsm_state31;
wire   [63:0] grp_fu_398_p2;
reg   [63:0] tmp_reg_997;
wire    ap_CS_fsm_state42;
reg   [11:0] conv1_address0;
reg    conv1_ce0;
reg    conv1_we0;
wire   [31:0] conv1_q0;
reg   [8:0] max1_0_address0;
reg    max1_0_ce0;
reg    max1_0_we0;
wire   [31:0] max1_0_q0;
reg    max1_0_ce1;
wire   [31:0] max1_0_q1;
reg   [9:0] conv2_0_address0;
reg    conv2_0_ce0;
reg    conv2_0_we0;
wire   [31:0] conv2_0_q0;
reg   [7:0] max2_0_address0;
reg    max2_0_ce0;
reg    max2_0_we0;
reg   [3:0] den1_0_address0;
reg    den1_0_ce0;
reg    den1_0_we0;
wire   [31:0] den1_0_d0;
wire    grp_convolution1_1_fu_326_ap_start;
wire    grp_convolution1_1_fu_326_ap_done;
wire    grp_convolution1_1_fu_326_ap_idle;
wire    grp_convolution1_1_fu_326_ap_ready;
wire   [8:0] grp_convolution1_1_fu_326_input_r_address0;
wire    grp_convolution1_1_fu_326_input_r_ce0;
wire   [8:0] grp_convolution1_1_fu_326_input_r_address1;
wire    grp_convolution1_1_fu_326_input_r_ce1;
wire   [11:0] grp_convolution1_1_fu_326_out_r_address0;
wire    grp_convolution1_1_fu_326_out_r_ce0;
wire    grp_convolution1_1_fu_326_out_r_we0;
wire   [31:0] grp_convolution1_1_fu_326_out_r_d0;
wire   [31:0] grp_convolution1_1_fu_326_grp_fu_371_p_din0;
wire   [31:0] grp_convolution1_1_fu_326_grp_fu_371_p_din1;
wire   [1:0] grp_convolution1_1_fu_326_grp_fu_371_p_opcode;
wire    grp_convolution1_1_fu_326_grp_fu_371_p_ce;
wire   [31:0] grp_convolution1_1_fu_326_grp_fu_377_p_din0;
wire   [31:0] grp_convolution1_1_fu_326_grp_fu_377_p_din1;
wire    grp_convolution1_1_fu_326_grp_fu_377_p_ce;
wire   [31:0] grp_convolution1_1_fu_326_grp_fu_1002_p_din0;
wire   [31:0] grp_convolution1_1_fu_326_grp_fu_1002_p_din1;
wire    grp_convolution1_1_fu_326_grp_fu_1002_p_ce;
wire   [31:0] grp_convolution1_1_fu_326_grp_fu_388_p_din0;
wire   [31:0] grp_convolution1_1_fu_326_grp_fu_388_p_din1;
wire   [4:0] grp_convolution1_1_fu_326_grp_fu_388_p_opcode;
wire    grp_convolution1_1_fu_326_grp_fu_388_p_ce;
wire    grp_maxPool_1_fu_338_ap_start;
wire    grp_maxPool_1_fu_338_ap_done;
wire    grp_maxPool_1_fu_338_ap_idle;
wire    grp_maxPool_1_fu_338_ap_ready;
wire   [11:0] grp_maxPool_1_fu_338_m_address0;
wire    grp_maxPool_1_fu_338_m_ce0;
wire   [8:0] grp_maxPool_1_fu_338_out_0_address0;
wire    grp_maxPool_1_fu_338_out_0_ce0;
wire    grp_maxPool_1_fu_338_out_0_we0;
wire   [31:0] grp_maxPool_1_fu_338_out_0_d0;
wire   [63:0] grp_maxPool_1_fu_338_grp_fu_1006_p_din0;
wire    grp_maxPool_1_fu_338_grp_fu_1006_p_ce;
wire   [31:0] grp_maxPool_1_fu_338_grp_fu_385_p_din0;
wire    grp_maxPool_1_fu_338_grp_fu_385_p_ce;
wire   [31:0] grp_maxPool_1_fu_338_grp_fu_1009_p_din0;
wire    grp_maxPool_1_fu_338_grp_fu_1009_p_ce;
wire    grp_convolution2_fu_344_ap_start;
wire    grp_convolution2_fu_344_ap_done;
wire    grp_convolution2_fu_344_ap_idle;
wire    grp_convolution2_fu_344_ap_ready;
wire   [8:0] grp_convolution2_fu_344_m_0_address0;
wire    grp_convolution2_fu_344_m_0_ce0;
wire   [8:0] grp_convolution2_fu_344_m_0_address1;
wire    grp_convolution2_fu_344_m_0_ce1;
wire   [9:0] grp_convolution2_fu_344_out_0_address0;
wire    grp_convolution2_fu_344_out_0_ce0;
wire    grp_convolution2_fu_344_out_0_we0;
wire   [31:0] grp_convolution2_fu_344_out_0_d0;
wire   [31:0] grp_convolution2_fu_344_grp_fu_371_p_din0;
wire   [31:0] grp_convolution2_fu_344_grp_fu_371_p_din1;
wire   [1:0] grp_convolution2_fu_344_grp_fu_371_p_opcode;
wire    grp_convolution2_fu_344_grp_fu_371_p_ce;
wire   [31:0] grp_convolution2_fu_344_grp_fu_377_p_din0;
wire   [31:0] grp_convolution2_fu_344_grp_fu_377_p_din1;
wire    grp_convolution2_fu_344_grp_fu_377_p_ce;
wire   [31:0] grp_convolution2_fu_344_grp_fu_1002_p_din0;
wire   [31:0] grp_convolution2_fu_344_grp_fu_1002_p_din1;
wire    grp_convolution2_fu_344_grp_fu_1002_p_ce;
wire   [31:0] grp_convolution2_fu_344_grp_fu_388_p_din0;
wire   [31:0] grp_convolution2_fu_344_grp_fu_388_p_din1;
wire   [4:0] grp_convolution2_fu_344_grp_fu_388_p_opcode;
wire    grp_convolution2_fu_344_grp_fu_388_p_ce;
wire    grp_maxPool_fu_354_ap_start;
wire    grp_maxPool_fu_354_ap_done;
wire    grp_maxPool_fu_354_ap_idle;
wire    grp_maxPool_fu_354_ap_ready;
wire   [9:0] grp_maxPool_fu_354_m_0_address0;
wire    grp_maxPool_fu_354_m_0_ce0;
wire   [7:0] grp_maxPool_fu_354_out_0_address0;
wire    grp_maxPool_fu_354_out_0_ce0;
wire    grp_maxPool_fu_354_out_0_we0;
wire   [31:0] grp_maxPool_fu_354_out_0_d0;
wire   [63:0] grp_maxPool_fu_354_grp_fu_1006_p_din0;
wire    grp_maxPool_fu_354_grp_fu_1006_p_ce;
wire   [31:0] grp_maxPool_fu_354_grp_fu_385_p_din0;
wire    grp_maxPool_fu_354_grp_fu_385_p_ce;
wire    grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_start;
wire    grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_done;
wire    grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_idle;
wire    grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_ready;
wire   [1:0] grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_out_r_address0;
wire    grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_out_r_ce0;
wire    grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_out_r_we0;
wire   [31:0] grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_out_r_d0;
wire   [63:0] grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_1006_p_din0;
wire    grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_1006_p_ce;
wire   [31:0] grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_1009_p_din0;
wire    grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_1009_p_ce;
wire   [63:0] grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_398_p_din0;
wire   [63:0] grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_398_p_din1;
wire    grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_398_p_ce;
reg   [3:0] i_reg_261;
reg   [31:0] add_lcssa_lcssa14_i_reg_272;
reg   [4:0] h_reg_282;
reg   [31:0] add11_i_reg_293;
reg   [4:0] i_2_reg_305;
reg   [31:0] den2_0_0_reg_316;
reg    grp_convolution1_1_fu_326_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_maxPool_1_fu_338_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_convolution2_fu_344_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_maxPool_fu_354_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_start_reg;
wire    ap_CS_fsm_state48;
wire   [63:0] zext_ln103_fu_449_p1;
wire   [63:0] zext_ln112_fu_549_p1;
wire   [63:0] zext_ln112_1_fu_576_p1;
wire   [63:0] zext_ln128_fu_683_p1;
wire   [63:0] zext_ln128_2_fu_709_p1;
reg   [4:0] d_fu_140;
reg   [2:0] d_1_fu_164;
reg   [31:0] den2_0_3_fu_168;
reg   [31:0] den2_0_3_1_fu_172;
reg   [31:0] den2_0_3_2_fu_176;
reg   [31:0] den2_0_3_3_fu_180;
reg   [63:0] sum_fu_184;
wire   [63:0] grp_fu_394_p2;
wire    ap_CS_fsm_state47;
reg   [2:0] i_1_fu_188;
wire   [2:0] add_ln138_fu_747_p2;
wire    ap_CS_fsm_state20;
reg   [31:0] grp_fu_371_p0;
reg   [31:0] grp_fu_371_p1;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state26;
reg   [31:0] grp_fu_377_p0;
reg   [31:0] grp_fu_377_p1;
reg   [31:0] grp_fu_385_p0;
reg   [31:0] grp_fu_388_p0;
reg   [31:0] grp_fu_388_p1;
reg   [63:0] grp_fu_398_p1;
wire    ap_CS_fsm_state32;
wire   [8:0] p_shl1_fu_483_p3;
wire   [11:0] p_shl_fu_476_p3;
wire   [11:0] p_shl1_cast_fu_490_p1;
wire   [7:0] zext_ln110_1_fu_528_p1;
wire   [7:0] add_ln112_fu_544_p2;
wire   [6:0] tmp_5_fu_554_p4;
wire   [11:0] tmp5_fu_563_p3;
wire   [11:0] add_ln112_1_fu_571_p2;
wire   [31:0] bitcast_ln116_fu_581_p1;
wire   [7:0] tmp_1_fu_585_p4;
wire   [22:0] trunc_ln116_fu_595_p1;
wire   [0:0] icmp_ln116_1_fu_605_p2;
wire   [0:0] icmp_ln116_fu_599_p2;
wire   [0:0] or_ln116_fu_611_p2;
wire   [0:0] grp_fu_388_p2;
wire   [0:0] and_ln116_fu_617_p2;
wire   [5:0] zext_ln128_1_fu_688_p1;
wire   [5:0] add_ln128_fu_704_p2;
wire   [1:0] tmp_4_fu_757_p5;
reg    grp_fu_371_ce;
reg    grp_fu_377_ce;
reg    grp_fu_385_ce;
reg    grp_fu_388_ce;
reg   [4:0] grp_fu_388_opcode;
reg    grp_fu_398_ce;
wire   [31:0] grp_fu_1002_p2;
reg   [31:0] grp_fu_1002_p0;
reg   [31:0] grp_fu_1002_p1;
reg    grp_fu_1002_ce;
wire   [31:0] grp_fu_1006_p1;
reg   [63:0] grp_fu_1006_p0;
reg    grp_fu_1006_ce;
wire   [63:0] grp_fu_1009_p1;
reg   [31:0] grp_fu_1009_p0;
reg    grp_fu_1009_ce;
reg   [47:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
reg    ap_ST_fsm_state48_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 48'd1;
#0 grp_convolution1_1_fu_326_ap_start_reg = 1'b0;
#0 grp_maxPool_1_fu_338_ap_start_reg = 1'b0;
#0 grp_convolution2_fu_344_ap_start_reg = 1'b0;
#0 grp_maxPool_fu_354_ap_start_reg = 1'b0;
#0 grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_start_reg = 1'b0;
end

master_thirdBias #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
thirdBias_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(thirdBias_address0),
    .ce0(thirdBias_ce0),
    .q0(thirdBias_q0)
);

master_firstDense #(
    .DataWidth( 32 ),
    .AddressRange( 3584 ),
    .AddressWidth( 12 ))
firstDense_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(firstDense_address0),
    .ce0(firstDense_ce0),
    .q0(firstDense_q0)
);

master_secondDense #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
secondDense_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(secondDense_address0),
    .ce0(secondDense_ce0),
    .q0(secondDense_q0)
);

master_conv1 #(
    .DataWidth( 32 ),
    .AddressRange( 3072 ),
    .AddressWidth( 12 ))
conv1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv1_address0),
    .ce0(conv1_ce0),
    .we0(conv1_we0),
    .d0(grp_convolution1_1_fu_326_out_r_d0),
    .q0(conv1_q0)
);

master_max1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 336 ),
    .AddressWidth( 9 ))
max1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max1_0_address0),
    .ce0(max1_0_ce0),
    .we0(max1_0_we0),
    .d0(grp_maxPool_1_fu_338_out_0_d0),
    .q0(max1_0_q0),
    .address1(grp_convolution2_fu_344_m_0_address1),
    .ce1(max1_0_ce1),
    .q1(max1_0_q1)
);

master_conv2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 672 ),
    .AddressWidth( 10 ))
conv2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(conv2_0_address0),
    .ce0(conv2_0_ce0),
    .we0(conv2_0_we0),
    .d0(grp_convolution2_fu_344_out_0_d0),
    .q0(conv2_0_q0)
);

master_max2_0 #(
    .DataWidth( 32 ),
    .AddressRange( 224 ),
    .AddressWidth( 8 ))
max2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(max2_0_address0),
    .ce0(max2_0_ce0),
    .we0(max2_0_we0),
    .d0(grp_maxPool_fu_354_out_0_d0),
    .q0(max2_0_q0)
);

master_den1_0 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
den1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(den1_0_address0),
    .ce0(den1_0_ce0),
    .we0(den1_0_we0),
    .d0(den1_0_d0),
    .q0(den1_0_q0)
);

master_convolution1_1 grp_convolution1_1_fu_326(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_convolution1_1_fu_326_ap_start),
    .ap_done(grp_convolution1_1_fu_326_ap_done),
    .ap_idle(grp_convolution1_1_fu_326_ap_idle),
    .ap_ready(grp_convolution1_1_fu_326_ap_ready),
    .input_r_address0(grp_convolution1_1_fu_326_input_r_address0),
    .input_r_ce0(grp_convolution1_1_fu_326_input_r_ce0),
    .input_r_q0(input_r_q0),
    .input_r_address1(grp_convolution1_1_fu_326_input_r_address1),
    .input_r_ce1(grp_convolution1_1_fu_326_input_r_ce1),
    .input_r_q1(input_r_q1),
    .out_r_address0(grp_convolution1_1_fu_326_out_r_address0),
    .out_r_ce0(grp_convolution1_1_fu_326_out_r_ce0),
    .out_r_we0(grp_convolution1_1_fu_326_out_r_we0),
    .out_r_d0(grp_convolution1_1_fu_326_out_r_d0),
    .grp_fu_371_p_din0(grp_convolution1_1_fu_326_grp_fu_371_p_din0),
    .grp_fu_371_p_din1(grp_convolution1_1_fu_326_grp_fu_371_p_din1),
    .grp_fu_371_p_opcode(grp_convolution1_1_fu_326_grp_fu_371_p_opcode),
    .grp_fu_371_p_dout0(grp_fu_371_p2),
    .grp_fu_371_p_ce(grp_convolution1_1_fu_326_grp_fu_371_p_ce),
    .grp_fu_377_p_din0(grp_convolution1_1_fu_326_grp_fu_377_p_din0),
    .grp_fu_377_p_din1(grp_convolution1_1_fu_326_grp_fu_377_p_din1),
    .grp_fu_377_p_dout0(grp_fu_377_p2),
    .grp_fu_377_p_ce(grp_convolution1_1_fu_326_grp_fu_377_p_ce),
    .grp_fu_1002_p_din0(grp_convolution1_1_fu_326_grp_fu_1002_p_din0),
    .grp_fu_1002_p_din1(grp_convolution1_1_fu_326_grp_fu_1002_p_din1),
    .grp_fu_1002_p_dout0(grp_fu_1002_p2),
    .grp_fu_1002_p_ce(grp_convolution1_1_fu_326_grp_fu_1002_p_ce),
    .grp_fu_388_p_din0(grp_convolution1_1_fu_326_grp_fu_388_p_din0),
    .grp_fu_388_p_din1(grp_convolution1_1_fu_326_grp_fu_388_p_din1),
    .grp_fu_388_p_opcode(grp_convolution1_1_fu_326_grp_fu_388_p_opcode),
    .grp_fu_388_p_dout0(grp_fu_388_p2),
    .grp_fu_388_p_ce(grp_convolution1_1_fu_326_grp_fu_388_p_ce)
);

master_maxPool_1 grp_maxPool_1_fu_338(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_maxPool_1_fu_338_ap_start),
    .ap_done(grp_maxPool_1_fu_338_ap_done),
    .ap_idle(grp_maxPool_1_fu_338_ap_idle),
    .ap_ready(grp_maxPool_1_fu_338_ap_ready),
    .m_address0(grp_maxPool_1_fu_338_m_address0),
    .m_ce0(grp_maxPool_1_fu_338_m_ce0),
    .m_q0(conv1_q0),
    .out_0_address0(grp_maxPool_1_fu_338_out_0_address0),
    .out_0_ce0(grp_maxPool_1_fu_338_out_0_ce0),
    .out_0_we0(grp_maxPool_1_fu_338_out_0_we0),
    .out_0_d0(grp_maxPool_1_fu_338_out_0_d0),
    .out_0_q0(max1_0_q0),
    .grp_fu_1006_p_din0(grp_maxPool_1_fu_338_grp_fu_1006_p_din0),
    .grp_fu_1006_p_dout0(grp_fu_1006_p1),
    .grp_fu_1006_p_ce(grp_maxPool_1_fu_338_grp_fu_1006_p_ce),
    .grp_fu_385_p_din0(grp_maxPool_1_fu_338_grp_fu_385_p_din0),
    .grp_fu_385_p_dout0(grp_fu_385_p1),
    .grp_fu_385_p_ce(grp_maxPool_1_fu_338_grp_fu_385_p_ce),
    .grp_fu_1009_p_din0(grp_maxPool_1_fu_338_grp_fu_1009_p_din0),
    .grp_fu_1009_p_dout0(grp_fu_1009_p1),
    .grp_fu_1009_p_ce(grp_maxPool_1_fu_338_grp_fu_1009_p_ce)
);

master_convolution2 grp_convolution2_fu_344(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_convolution2_fu_344_ap_start),
    .ap_done(grp_convolution2_fu_344_ap_done),
    .ap_idle(grp_convolution2_fu_344_ap_idle),
    .ap_ready(grp_convolution2_fu_344_ap_ready),
    .m_0_address0(grp_convolution2_fu_344_m_0_address0),
    .m_0_ce0(grp_convolution2_fu_344_m_0_ce0),
    .m_0_q0(max1_0_q0),
    .m_0_address1(grp_convolution2_fu_344_m_0_address1),
    .m_0_ce1(grp_convolution2_fu_344_m_0_ce1),
    .m_0_q1(max1_0_q1),
    .out_0_address0(grp_convolution2_fu_344_out_0_address0),
    .out_0_ce0(grp_convolution2_fu_344_out_0_ce0),
    .out_0_we0(grp_convolution2_fu_344_out_0_we0),
    .out_0_d0(grp_convolution2_fu_344_out_0_d0),
    .grp_fu_371_p_din0(grp_convolution2_fu_344_grp_fu_371_p_din0),
    .grp_fu_371_p_din1(grp_convolution2_fu_344_grp_fu_371_p_din1),
    .grp_fu_371_p_opcode(grp_convolution2_fu_344_grp_fu_371_p_opcode),
    .grp_fu_371_p_dout0(grp_fu_371_p2),
    .grp_fu_371_p_ce(grp_convolution2_fu_344_grp_fu_371_p_ce),
    .grp_fu_377_p_din0(grp_convolution2_fu_344_grp_fu_377_p_din0),
    .grp_fu_377_p_din1(grp_convolution2_fu_344_grp_fu_377_p_din1),
    .grp_fu_377_p_dout0(grp_fu_377_p2),
    .grp_fu_377_p_ce(grp_convolution2_fu_344_grp_fu_377_p_ce),
    .grp_fu_1002_p_din0(grp_convolution2_fu_344_grp_fu_1002_p_din0),
    .grp_fu_1002_p_din1(grp_convolution2_fu_344_grp_fu_1002_p_din1),
    .grp_fu_1002_p_dout0(grp_fu_1002_p2),
    .grp_fu_1002_p_ce(grp_convolution2_fu_344_grp_fu_1002_p_ce),
    .grp_fu_388_p_din0(grp_convolution2_fu_344_grp_fu_388_p_din0),
    .grp_fu_388_p_din1(grp_convolution2_fu_344_grp_fu_388_p_din1),
    .grp_fu_388_p_opcode(grp_convolution2_fu_344_grp_fu_388_p_opcode),
    .grp_fu_388_p_dout0(grp_fu_388_p2),
    .grp_fu_388_p_ce(grp_convolution2_fu_344_grp_fu_388_p_ce)
);

master_maxPool grp_maxPool_fu_354(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_maxPool_fu_354_ap_start),
    .ap_done(grp_maxPool_fu_354_ap_done),
    .ap_idle(grp_maxPool_fu_354_ap_idle),
    .ap_ready(grp_maxPool_fu_354_ap_ready),
    .m_0_address0(grp_maxPool_fu_354_m_0_address0),
    .m_0_ce0(grp_maxPool_fu_354_m_0_ce0),
    .m_0_q0(conv2_0_q0),
    .out_0_address0(grp_maxPool_fu_354_out_0_address0),
    .out_0_ce0(grp_maxPool_fu_354_out_0_ce0),
    .out_0_we0(grp_maxPool_fu_354_out_0_we0),
    .out_0_d0(grp_maxPool_fu_354_out_0_d0),
    .out_0_q0(max2_0_q0),
    .grp_fu_1006_p_din0(grp_maxPool_fu_354_grp_fu_1006_p_din0),
    .grp_fu_1006_p_dout0(grp_fu_1006_p1),
    .grp_fu_1006_p_ce(grp_maxPool_fu_354_grp_fu_1006_p_ce),
    .grp_fu_385_p_din0(grp_maxPool_fu_354_grp_fu_385_p_din0),
    .grp_fu_385_p_dout0(grp_fu_385_p1),
    .grp_fu_385_p_ce(grp_maxPool_fu_354_grp_fu_385_p_ce)
);

master_master_Pipeline_VITIS_LOOP_143_2 grp_master_Pipeline_VITIS_LOOP_143_2_fu_360(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_start),
    .ap_done(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_done),
    .ap_idle(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_idle),
    .ap_ready(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_ready),
    .den2_0_0_01(den2_0_3_load_reg_972),
    .den2_0_1_02(den2_0_3_1_load_reg_977),
    .den2_0_2_03(den2_0_3_2_load_reg_982),
    .den2_0_3_04(den2_0_3_3_load_reg_987),
    .sum(reg_435),
    .out_r_address0(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_out_r_address0),
    .out_r_ce0(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_out_r_ce0),
    .out_r_we0(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_out_r_we0),
    .out_r_d0(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_out_r_d0),
    .grp_fu_1006_p_din0(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_1006_p_din0),
    .grp_fu_1006_p_dout0(grp_fu_1006_p1),
    .grp_fu_1006_p_ce(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_1006_p_ce),
    .grp_fu_1009_p_din0(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_1009_p_din0),
    .grp_fu_1009_p_dout0(grp_fu_1009_p1),
    .grp_fu_1009_p_ce(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_1009_p_ce),
    .grp_fu_398_p_din0(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_398_p_din0),
    .grp_fu_398_p_din1(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_398_p_din1),
    .grp_fu_398_p_dout0(grp_fu_398_p2),
    .grp_fu_398_p_ce(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_398_p_ce)
);

master_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_371_p0),
    .din1(grp_fu_371_p1),
    .ce(grp_fu_371_ce),
    .dout(grp_fu_371_p2)
);

master_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_377_p0),
    .din1(grp_fu_377_p1),
    .ce(grp_fu_377_ce),
    .dout(grp_fu_377_p2)
);

master_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_385_p0),
    .ce(grp_fu_385_ce),
    .dout(grp_fu_385_p1)
);

master_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_388_p0),
    .din1(grp_fu_388_p1),
    .ce(grp_fu_388_ce),
    .opcode(grp_fu_388_opcode),
    .dout(grp_fu_388_p2)
);

master_dadd_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadd_64ns_64ns_64_5_full_dsp_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sum_fu_184),
    .din1(tmp_reg_997),
    .ce(1'b1),
    .dout(grp_fu_394_p2)
);

master_dexp_64ns_64ns_64_11_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dexp_64ns_64ns_64_11_full_dsp_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_398_p_din0),
    .din1(grp_fu_398_p1),
    .ce(grp_fu_398_ce),
    .dout(grp_fu_398_p2)
);

master_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U55(
    .din0(32'd3216415171),
    .din1(32'd1066108905),
    .din2(32'd3214574508),
    .din3(32'd3191687500),
    .din4(trunc_ln126_fu_647_p1),
    .dout(tmp_s_fu_651_p6)
);

master_mux_42_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_42_32_1_1_U56(
    .din0(den2_0_3_fu_168),
    .din1(den2_0_3_1_fu_172),
    .din2(den2_0_3_2_fu_176),
    .din3(den2_0_3_3_fu_180),
    .din4(tmp_4_fu_757_p5),
    .dout(tmp_4_fu_757_p6)
);

master_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1002_p0),
    .din1(grp_fu_1002_p1),
    .ce(grp_fu_1002_ce),
    .dout(grp_fu_1002_p2)
);

master_fptrunc_64ns_32_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
fptrunc_64ns_32_2_no_dsp_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1006_p0),
    .ce(grp_fu_1006_ce),
    .dout(grp_fu_1006_p1)
);

master_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1009_p0),
    .ce(grp_fu_1009_ce),
    .dout(grp_fu_1009_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_convolution1_1_fu_326_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_convolution1_1_fu_326_ap_start_reg <= 1'b1;
        end else if ((grp_convolution1_1_fu_326_ap_ready == 1'b1)) begin
            grp_convolution1_1_fu_326_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_convolution2_fu_344_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_convolution2_fu_344_ap_start_reg <= 1'b1;
        end else if ((grp_convolution2_fu_344_ap_ready == 1'b1)) begin
            grp_convolution2_fu_344_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln138_fu_741_p2 == 1'd1))) begin
            grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_start_reg <= 1'b1;
        end else if ((grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_ready == 1'b1)) begin
            grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_maxPool_1_fu_338_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_maxPool_1_fu_338_ap_start_reg <= 1'b1;
        end else if ((grp_maxPool_1_fu_338_ap_ready == 1'b1)) begin
            grp_maxPool_1_fu_338_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_maxPool_fu_354_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_maxPool_fu_354_ap_start_reg <= 1'b1;
        end else if ((grp_maxPool_fu_354_ap_ready == 1'b1)) begin
            grp_maxPool_fu_354_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln106_fu_500_p2 == 1'd0))) begin
        add11_i_reg_293 <= add_lcssa_lcssa14_i_reg_272;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        add11_i_reg_293 <= grp_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_lcssa_lcssa14_i_reg_272 <= thirdBias_q0;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln110_fu_532_p2 == 1'd1))) begin
        add_lcssa_lcssa14_i_reg_272 <= add11_i_reg_293;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln103_fu_455_p2 == 1'd1))) begin
        d_1_fu_164 <= 3'd0;
    end else if (((icmp_ln127_fu_692_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        d_1_fu_164 <= add_ln124_reg_903;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        d_fu_140 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln106_fu_500_p2 == 1'd1))) begin
        d_fu_140 <= add_ln103_reg_792;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_635_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        den2_0_0_reg_316 <= tmp_s_fu_651_p6;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        den2_0_0_reg_316 <= grp_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln106_fu_500_p2 == 1'd0))) begin
        h_reg_282 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        h_reg_282 <= add_ln110_reg_875;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_635_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        i_1_fu_188 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln138_fu_741_p2 == 1'd0))) begin
        i_1_fu_188 <= add_ln138_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_635_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        i_2_reg_305 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        i_2_reg_305 <= add_ln127_reg_939;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_reg_261 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln110_fu_532_p2 == 1'd1))) begin
        i_reg_261 <= add_ln106_reg_857;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_635_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        sum_fu_184 <= 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        sum_fu_184 <= grp_fu_394_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln103_reg_792 <= add_ln103_fu_461_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln106_reg_857 <= add_ln106_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln110_reg_875 <= add_ln110_fu_538_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln124_reg_903 <= add_ln124_fu_641_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln127_reg_939 <= add_ln127_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        conv_i_reg_992 <= grp_fu_385_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln103_fu_455_p2 == 1'd0))) begin
        den1_0_addr_reg_802 <= zext_ln103_fu_449_p1;
        empty_40_reg_807 <= empty_40_fu_467_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln127_fu_692_p2 == 1'd1) & (trunc_ln126_reg_908 == 2'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        den2_0_3_1_fu_172 <= den2_0_0_reg_316;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln138_fu_741_p2 == 1'd1))) begin
        den2_0_3_1_load_reg_977 <= den2_0_3_1_fu_172;
        den2_0_3_2_load_reg_982 <= den2_0_3_2_fu_176;
        den2_0_3_3_load_reg_987 <= den2_0_3_3_fu_180;
        den2_0_3_load_reg_972 <= den2_0_3_fu_168;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln127_fu_692_p2 == 1'd1) & (trunc_ln126_reg_908 == 2'd2) & (1'b1 == ap_CS_fsm_state22))) begin
        den2_0_3_2_fu_176 <= den2_0_0_reg_316;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln127_fu_692_p2 == 1'd1) & (trunc_ln126_reg_908 == 2'd3) & (1'b1 == ap_CS_fsm_state22))) begin
        den2_0_3_3_fu_180 <= den2_0_0_reg_316;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln127_fu_692_p2 == 1'd1) & (trunc_ln126_reg_908 == 2'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        den2_0_3_fu_168 <= den2_0_0_reg_316;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        empty_41_reg_849[11 : 5] <= empty_41_fu_494_p2[11 : 5];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state15))) begin
        reg_424 <= grp_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) | ((1'b1 == ap_CS_fsm_state30) & (icmp_ln138_fu_741_p2 == 1'd1)))) begin
        reg_435 <= sum_fu_184;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln124_fu_635_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        tmp_2_reg_917[5 : 4] <= tmp_2_fu_665_p3[5 : 4];
        trunc_ln126_reg_908 <= trunc_ln126_fu_647_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln106_fu_500_p2 == 1'd0))) begin
        tmp_6_reg_862[7 : 4] <= tmp_6_fu_512_p3[7 : 4];
        zext_ln110_reg_867[7 : 4] <= zext_ln110_fu_520_p1[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        tmp_reg_997 <= grp_fu_398_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((grp_convolution1_1_fu_326_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

always @ (*) begin
    if ((grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_done == 1'b0)) begin
        ap_ST_fsm_state48_blk = 1'b1;
    end else begin
        ap_ST_fsm_state48_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_maxPool_1_fu_338_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_convolution2_fu_344_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_maxPool_fu_354_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv1_address0 = grp_maxPool_1_fu_338_m_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        conv1_address0 = grp_convolution1_1_fu_326_out_r_address0;
    end else begin
        conv1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        conv1_ce0 = grp_maxPool_1_fu_338_m_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        conv1_ce0 = grp_convolution1_1_fu_326_out_r_ce0;
    end else begin
        conv1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        conv1_we0 = grp_convolution1_1_fu_326_out_r_we0;
    end else begin
        conv1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv2_0_address0 = grp_maxPool_fu_354_m_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv2_0_address0 = grp_convolution2_fu_344_out_0_address0;
    end else begin
        conv2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        conv2_0_ce0 = grp_maxPool_fu_354_m_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv2_0_ce0 = grp_convolution2_fu_344_out_0_ce0;
    end else begin
        conv2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        conv2_0_we0 = grp_convolution2_fu_344_out_0_we0;
    end else begin
        conv2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        den1_0_address0 = zext_ln128_fu_683_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        den1_0_address0 = den1_0_addr_reg_802;
    end else begin
        den1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state22))) begin
        den1_0_ce0 = 1'b1;
    end else begin
        den1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        den1_0_we0 = 1'b1;
    end else begin
        den1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        firstDense_ce0 = 1'b1;
    end else begin
        firstDense_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_1002_ce = grp_convolution2_fu_344_grp_fu_1002_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_1002_ce = grp_convolution1_1_fu_326_grp_fu_1002_p_ce;
    end else begin
        grp_fu_1002_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_1002_p0 = grp_convolution2_fu_344_grp_fu_1002_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_1002_p0 = grp_convolution1_1_fu_326_grp_fu_1002_p_din0;
    end else begin
        grp_fu_1002_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_1002_p1 = grp_convolution2_fu_344_grp_fu_1002_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_1002_p1 = grp_convolution1_1_fu_326_grp_fu_1002_p_din1;
    end else begin
        grp_fu_1002_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1006_ce = grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_1006_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_1006_ce = grp_maxPool_fu_354_grp_fu_1006_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_1006_ce = grp_maxPool_1_fu_338_grp_fu_1006_p_ce;
    end else begin
        grp_fu_1006_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1006_p0 = grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_1006_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_1006_p0 = grp_maxPool_fu_354_grp_fu_1006_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_1006_p0 = grp_maxPool_1_fu_338_grp_fu_1006_p_din0;
    end else begin
        grp_fu_1006_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1009_ce = grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_1009_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_1009_ce = grp_maxPool_1_fu_338_grp_fu_1009_p_ce;
    end else begin
        grp_fu_1009_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_1009_p0 = grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_1009_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_1009_p0 = grp_maxPool_1_fu_338_grp_fu_1009_p_din0;
    end else begin
        grp_fu_1009_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_371_ce = grp_convolution2_fu_344_grp_fu_371_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_371_ce = grp_convolution1_1_fu_326_grp_fu_371_p_ce;
    end else begin
        grp_fu_371_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_371_p0 = grp_convolution2_fu_344_grp_fu_371_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_371_p0 = grp_convolution1_1_fu_326_grp_fu_371_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_371_p0 = den2_0_0_reg_316;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_371_p0 = add11_i_reg_293;
    end else begin
        grp_fu_371_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_371_p1 = grp_convolution2_fu_344_grp_fu_371_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_371_p1 = grp_convolution1_1_fu_326_grp_fu_371_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_fu_371_p1 = reg_424;
    end else begin
        grp_fu_371_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_377_ce = grp_convolution2_fu_344_grp_fu_377_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_377_ce = grp_convolution1_1_fu_326_grp_fu_377_p_ce;
    end else begin
        grp_fu_377_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_377_p0 = grp_convolution2_fu_344_grp_fu_377_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_377_p0 = grp_convolution1_1_fu_326_grp_fu_377_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_377_p0 = den1_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_377_p0 = max2_0_q0;
    end else begin
        grp_fu_377_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_377_p1 = grp_convolution2_fu_344_grp_fu_377_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_377_p1 = grp_convolution1_1_fu_326_grp_fu_377_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        grp_fu_377_p1 = secondDense_q0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_377_p1 = firstDense_q0;
    end else begin
        grp_fu_377_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_385_ce = grp_maxPool_fu_354_grp_fu_385_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_385_ce = grp_maxPool_1_fu_338_grp_fu_385_p_ce;
    end else begin
        grp_fu_385_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        grp_fu_385_p0 = grp_maxPool_fu_354_grp_fu_385_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_385_p0 = grp_maxPool_1_fu_338_grp_fu_385_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        grp_fu_385_p0 = tmp_4_fu_757_p6;
    end else begin
        grp_fu_385_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_388_ce = grp_convolution2_fu_344_grp_fu_388_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_388_ce = grp_convolution1_1_fu_326_grp_fu_388_p_ce;
    end else begin
        grp_fu_388_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_388_opcode = grp_convolution2_fu_344_grp_fu_388_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_388_opcode = grp_convolution1_1_fu_326_grp_fu_388_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln106_fu_500_p2 == 1'd1))) begin
        grp_fu_388_opcode = 5'd4;
    end else begin
        grp_fu_388_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_388_p0 = grp_convolution2_fu_344_grp_fu_388_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_388_p0 = grp_convolution1_1_fu_326_grp_fu_388_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_388_p0 = add_lcssa_lcssa14_i_reg_272;
    end else begin
        grp_fu_388_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_388_p1 = grp_convolution2_fu_344_grp_fu_388_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_388_p1 = grp_convolution1_1_fu_326_grp_fu_388_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_388_p1 = 32'd0;
    end else begin
        grp_fu_388_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_398_ce = grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_398_p_ce;
    end else begin
        grp_fu_398_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state30))) begin
        grp_fu_398_p1 = grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_grp_fu_398_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        grp_fu_398_p1 = conv_i_reg_992;
    end else begin
        grp_fu_398_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        max1_0_address0 = grp_convolution2_fu_344_m_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        max1_0_address0 = grp_maxPool_1_fu_338_out_0_address0;
    end else begin
        max1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        max1_0_ce0 = grp_convolution2_fu_344_m_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        max1_0_ce0 = grp_maxPool_1_fu_338_out_0_ce0;
    end else begin
        max1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        max1_0_ce1 = grp_convolution2_fu_344_m_0_ce1;
    end else begin
        max1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        max1_0_we0 = grp_maxPool_1_fu_338_out_0_we0;
    end else begin
        max1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        max2_0_address0 = zext_ln112_fu_549_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        max2_0_address0 = grp_maxPool_fu_354_out_0_address0;
    end else begin
        max2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        max2_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        max2_0_ce0 = grp_maxPool_fu_354_out_0_ce0;
    end else begin
        max2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        max2_0_we0 = grp_maxPool_fu_354_out_0_we0;
    end else begin
        max2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        secondDense_ce0 = 1'b1;
    end else begin
        secondDense_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        thirdBias_ce0 = 1'b1;
    end else begin
        thirdBias_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_convolution1_1_fu_326_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_maxPool_1_fu_338_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_convolution2_fu_344_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_maxPool_fu_354_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln103_fu_455_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln106_fu_500_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln110_fu_532_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln124_fu_635_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln127_fu_692_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (icmp_ln138_fu_741_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state48 : begin
            if (((grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln103_fu_461_p2 = (d_fu_140 + 5'd1);

assign add_ln106_fu_506_p2 = (i_reg_261 + 4'd1);

assign add_ln110_fu_538_p2 = (h_reg_282 + 5'd1);

assign add_ln112_1_fu_571_p2 = (tmp5_fu_563_p3 + zext_ln110_reg_867);

assign add_ln112_fu_544_p2 = (zext_ln110_1_fu_528_p1 + tmp_6_reg_862);

assign add_ln124_fu_641_p2 = (d_1_fu_164 + 3'd1);

assign add_ln127_fu_698_p2 = (i_2_reg_305 + 5'd1);

assign add_ln128_fu_704_p2 = (zext_ln128_1_fu_688_p1 + tmp_2_reg_917);

assign add_ln138_fu_747_p2 = (i_1_fu_188 + 3'd1);

assign and_ln116_fu_617_p2 = (or_ln116_fu_611_p2 & grp_fu_388_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln116_fu_581_p1 = add_lcssa_lcssa14_i_reg_272;

assign den1_0_d0 = ((and_ln116_fu_617_p2[0:0] == 1'b1) ? 32'd0 : add_lcssa_lcssa14_i_reg_272);

assign empty_40_fu_467_p1 = d_fu_140[3:0];

assign empty_41_fu_494_p2 = (p_shl_fu_476_p3 - p_shl1_cast_fu_490_p1);

assign firstDense_address0 = zext_ln112_1_fu_576_p1;

assign grp_convolution1_1_fu_326_ap_start = grp_convolution1_1_fu_326_ap_start_reg;

assign grp_convolution2_fu_344_ap_start = grp_convolution2_fu_344_ap_start_reg;

assign grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_start = grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_ap_start_reg;

assign grp_maxPool_1_fu_338_ap_start = grp_maxPool_1_fu_338_ap_start_reg;

assign grp_maxPool_fu_354_ap_start = grp_maxPool_fu_354_ap_start_reg;

assign icmp_ln103_fu_455_p2 = ((d_fu_140 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln106_fu_500_p2 = ((i_reg_261 == 4'd14) ? 1'b1 : 1'b0);

assign icmp_ln110_fu_532_p2 = ((h_reg_282 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln116_1_fu_605_p2 = ((trunc_ln116_fu_595_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_599_p2 = ((tmp_1_fu_585_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_635_p2 = ((d_1_fu_164 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln127_fu_692_p2 = ((i_2_reg_305 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_741_p2 = ((i_1_fu_188 == 3'd4) ? 1'b1 : 1'b0);

assign input_r_address0 = grp_convolution1_1_fu_326_input_r_address0;

assign input_r_address1 = grp_convolution1_1_fu_326_input_r_address1;

assign input_r_ce0 = grp_convolution1_1_fu_326_input_r_ce0;

assign input_r_ce1 = grp_convolution1_1_fu_326_input_r_ce1;

assign or_ln116_fu_611_p2 = (icmp_ln116_fu_599_p2 | icmp_ln116_1_fu_605_p2);

assign out_r_address0 = grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_out_r_address0;

assign out_r_ce0 = grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_out_r_ce0;

assign out_r_d0 = grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_out_r_d0;

assign out_r_we0 = grp_master_Pipeline_VITIS_LOOP_143_2_fu_360_out_r_we0;

assign p_shl1_cast_fu_490_p1 = p_shl1_fu_483_p3;

assign p_shl1_fu_483_p3 = {{empty_40_reg_807}, {5'd0}};

assign p_shl_fu_476_p3 = {{empty_40_reg_807}, {8'd0}};

assign secondDense_address0 = zext_ln128_2_fu_709_p1;

assign thirdBias_address0 = zext_ln103_fu_449_p1;

assign tmp5_fu_563_p3 = {{tmp_5_fu_554_p4}, {h_reg_282}};

assign tmp_1_fu_585_p4 = {{bitcast_ln116_fu_581_p1[30:23]}};

assign tmp_2_fu_665_p3 = {{trunc_ln126_fu_647_p1}, {4'd0}};

assign tmp_4_fu_757_p5 = i_1_fu_188[1:0];

assign tmp_5_fu_554_p4 = {{empty_41_reg_849[11:5]}};

assign tmp_6_fu_512_p3 = {{i_reg_261}, {4'd0}};

assign trunc_ln116_fu_595_p1 = bitcast_ln116_fu_581_p1[22:0];

assign trunc_ln126_fu_647_p1 = d_1_fu_164[1:0];

assign zext_ln103_fu_449_p1 = d_fu_140;

assign zext_ln110_1_fu_528_p1 = h_reg_282;

assign zext_ln110_fu_520_p1 = tmp_6_fu_512_p3;

assign zext_ln112_1_fu_576_p1 = add_ln112_1_fu_571_p2;

assign zext_ln112_fu_549_p1 = add_ln112_fu_544_p2;

assign zext_ln128_1_fu_688_p1 = i_2_reg_305;

assign zext_ln128_2_fu_709_p1 = add_ln128_fu_704_p2;

assign zext_ln128_fu_683_p1 = i_2_reg_305;

always @ (posedge ap_clk) begin
    empty_41_reg_849[4:0] <= 5'b00000;
    tmp_6_reg_862[3:0] <= 4'b0000;
    zext_ln110_reg_867[3:0] <= 4'b0000;
    zext_ln110_reg_867[11:8] <= 4'b0000;
    tmp_2_reg_917[3:0] <= 4'b0000;
end

endmodule //master
