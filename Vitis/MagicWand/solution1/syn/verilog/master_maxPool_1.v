// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module master_maxPool_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_address0,
        m_ce0,
        m_q0,
        out_0_address0,
        out_0_ce0,
        out_0_we0,
        out_0_d0,
        out_0_q0,
        grp_fu_1006_p_din0,
        grp_fu_1006_p_dout0,
        grp_fu_1006_p_ce,
        grp_fu_385_p_din0,
        grp_fu_385_p_dout0,
        grp_fu_385_p_ce,
        grp_fu_1009_p_din0,
        grp_fu_1009_p_dout0,
        grp_fu_1009_p_ce
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_state16 = 20'd32768;
parameter    ap_ST_fsm_state17 = 20'd65536;
parameter    ap_ST_fsm_state18 = 20'd131072;
parameter    ap_ST_fsm_state19 = 20'd262144;
parameter    ap_ST_fsm_state20 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] m_address0;
output   m_ce0;
input  [31:0] m_q0;
output  [8:0] out_0_address0;
output   out_0_ce0;
output   out_0_we0;
output  [31:0] out_0_d0;
input  [31:0] out_0_q0;
output  [63:0] grp_fu_1006_p_din0;
input  [31:0] grp_fu_1006_p_dout0;
output   grp_fu_1006_p_ce;
output  [31:0] grp_fu_385_p_din0;
input  [63:0] grp_fu_385_p_dout0;
output   grp_fu_385_p_ce;
output  [31:0] grp_fu_1009_p_din0;
input  [63:0] grp_fu_1009_p_dout0;
output   grp_fu_1009_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_ce0;
reg[8:0] out_0_address0;
reg out_0_ce0;
reg out_0_we0;
reg[31:0] out_0_d0;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [11:0] zext_ln83_fu_181_p1;
reg   [11:0] zext_ln83_reg_669;
wire    ap_CS_fsm_state2;
wire   [8:0] zext_ln83_1_fu_185_p1;
reg   [8:0] zext_ln83_1_reg_674;
wire   [3:0] add_ln83_fu_195_p2;
reg   [3:0] add_ln83_reg_682;
wire   [8:0] zext_ln85_fu_201_p1;
reg   [8:0] zext_ln85_reg_687;
wire    ap_CS_fsm_state3;
wire   [7:0] add_ln85_fu_213_p2;
reg   [7:0] add_ln85_reg_695;
wire   [6:0] empty_35_fu_219_p1;
reg   [6:0] empty_35_reg_700;
wire   [0:0] tmp_3_fu_205_p3;
wire   [8:0] arrayidx121_sum_fu_273_p2;
reg   [8:0] arrayidx121_sum_reg_709;
wire   [0:0] icmp_ln87_fu_243_p2;
reg   [8:0] out_0_addr_reg_717;
wire    ap_CS_fsm_state13;
wire   [8:0] empty_36_fu_303_p2;
reg   [8:0] empty_36_reg_722;
wire    ap_CS_fsm_state15;
wire   [1:0] add_ln91_fu_314_p2;
reg   [1:0] add_ln91_reg_735;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln91_fu_308_p2;
wire    ap_CS_fsm_state17;
reg   [0:0] p_Result_s_reg_750;
reg   [0:0] p_Result_1_reg_757;
reg   [63:0] dc_reg_763;
wire    ap_CS_fsm_state18;
reg   [63:0] dc_1_reg_770;
wire   [63:0] res_5_fu_654_p3;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
reg   [7:0] i_reg_129;
wire   [0:0] icmp_ln83_fu_189_p2;
reg   [1:0] j_reg_140;
reg   [31:0] conv2221_reg_151;
wire   [63:0] arrayidx121_sum_cast_fu_292_p1;
wire   [63:0] zext_ln93_fu_342_p1;
reg   [3:0] d_fu_98;
wire   [0:0] icmp_ln88_fu_286_p2;
wire    ap_CS_fsm_state14;
wire   [6:0] mul_fu_231_p0;
wire   [8:0] mul_fu_231_p1;
wire   [7:0] i_cast1_cast_fu_223_p1;
wire   [7:0] add_ln87_fu_237_p2;
wire   [2:0] grp_fu_249_p1;
wire   [14:0] mul_fu_231_p2;
wire   [5:0] tmp_1_fu_255_p4;
wire   [8:0] tmp_2_fu_265_p3;
wire   [1:0] grp_fu_249_p2;
wire   [1:0] trunc_ln88_fu_282_p1;
wire   [8:0] p_shl_fu_296_p3;
wire   [8:0] j_cast_fu_320_p1;
wire   [8:0] tmp3_fu_324_p2;
wire   [11:0] tmp2_fu_329_p3;
wire   [11:0] add_ln93_fu_337_p2;
wire   [31:0] bitcast_ln483_fu_347_p1;
wire   [31:0] bitcast_ln483_2_fu_359_p1;
wire   [63:0] data_V_fu_371_p1;
wire   [63:0] data_V_1_fu_388_p1;
wire   [10:0] tmp_fu_374_p4;
wire   [51:0] tmp_5_fu_384_p1;
wire   [0:0] icmp_ln1003_fu_405_p2;
wire   [0:0] icmp_ln1003_1_fu_411_p2;
wire   [10:0] tmp_6_fu_391_p4;
wire   [51:0] tmp_7_fu_401_p1;
wire   [0:0] icmp_ln1003_5_fu_447_p2;
wire   [0:0] icmp_ln1007_fu_453_p2;
wire   [0:0] icmp_ln1003_2_fu_423_p2;
wire   [0:0] icmp_ln1003_3_fu_429_p2;
wire   [0:0] and_ln25_1_fu_465_p2;
wire   [0:0] and_ln25_fu_417_p2;
wire   [0:0] xor_ln25_fu_471_p2;
wire   [51:0] p_Result_2_fu_483_p4;
wire   [63:0] p_Result_3_fu_493_p4;
wire   [62:0] trunc_ln368_fu_506_p1;
wire   [62:0] trunc_ln368_1_fu_517_p1;
wire   [63:0] p_Result_4_fu_510_p3;
wire   [63:0] p_Result_5_fu_521_p3;
wire   [0:0] ymaggreater_fu_528_p2;
wire   [0:0] xor_ln39_fu_534_p2;
wire   [0:0] select_ln39_fu_540_p3;
wire   [0:0] ymaggreater_1_fu_547_p3;
wire   [0:0] icmp_ln1003_4_fu_435_p2;
wire   [0:0] xor_ln1007_fu_441_p2;
wire   [0:0] and_ln18_1_fu_560_p2;
wire   [0:0] and_ln18_fu_459_p2;
wire   [0:0] and_ln18_2_fu_566_p2;
wire   [63:0] res_fu_502_p1;
wire   [63:0] res_1_fu_554_p3;
wire   [0:0] and_ln25_3_fu_580_p2;
wire   [0:0] and_ln25_4_fu_586_p2;
wire   [63:0] res_2_fu_572_p3;
wire   [0:0] and_ln18_3_fu_599_p2;
wire   [0:0] xor_ln18_fu_605_p2;
wire   [0:0] and_ln18_4_fu_611_p2;
wire   [63:0] res_3_fu_592_p3;
wire   [0:0] xor_ln18_1_fu_624_p2;
wire   [0:0] or_ln18_fu_630_p2;
wire   [0:0] and_ln25_2_fu_477_p2;
wire   [0:0] xor_ln18_2_fu_636_p2;
wire   [0:0] or_ln18_1_fu_642_p2;
wire   [0:0] and_ln18_5_fu_648_p2;
wire   [63:0] res_4_fu_617_p3;
reg    grp_fu_249_ap_start;
wire    grp_fu_249_ap_done;
reg   [19:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire   [14:0] mul_fu_231_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
end

master_mul_7ns_9ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
mul_7ns_9ns_15_1_1_U15(
    .din0(mul_fu_231_p0),
    .din1(mul_fu_231_p1),
    .dout(mul_fu_231_p2)
);

master_urem_7ns_3ns_2_11_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_7ns_3ns_2_11_seq_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_249_ap_start),
    .done(grp_fu_249_ap_done),
    .din0(empty_35_fu_219_p1),
    .din1(grp_fu_249_p1),
    .ce(1'b1),
    .dout(grp_fu_249_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        conv2221_reg_151 <= out_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        conv2221_reg_151 <= grp_fu_1006_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        d_fu_98 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln87_fu_243_p2 == 1'd1) | (tmp_3_fu_205_p3 == 1'd1)))) begin
        d_fu_98 <= add_ln83_reg_682;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln83_fu_189_p2 == 1'd0))) begin
        i_reg_129 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln91_fu_308_p2 == 1'd1))) begin
        i_reg_129 <= add_ln85_reg_695;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        j_reg_140 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        j_reg_140 <= add_ln91_reg_735;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln83_reg_682 <= add_ln83_fu_195_p2;
        zext_ln83_1_reg_674[3 : 0] <= zext_ln83_1_fu_185_p1[3 : 0];
        zext_ln83_reg_669[3 : 0] <= zext_ln83_fu_181_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln85_reg_695 <= add_ln85_fu_213_p2;
        zext_ln85_reg_687[7 : 0] <= zext_ln85_fu_201_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln91_reg_735 <= add_ln91_fu_314_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln87_fu_243_p2 == 1'd0) & (tmp_3_fu_205_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        arrayidx121_sum_reg_709 <= arrayidx121_sum_fu_273_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        dc_1_reg_770 <= grp_fu_1009_p_dout0;
        dc_reg_763 <= grp_fu_385_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_205_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        empty_35_reg_700 <= empty_35_fu_219_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        empty_36_reg_722 <= empty_36_fu_303_p2;
        out_0_addr_reg_717 <= arrayidx121_sum_cast_fu_292_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        p_Result_1_reg_757 <= bitcast_ln483_2_fu_359_p1[32'd31];
        p_Result_s_reg_750 <= bitcast_ln483_fu_347_p1[32'd31];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (icmp_ln83_fu_189_p2 == 1'd1)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln83_fu_189_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln87_fu_243_p2 == 1'd0) & (tmp_3_fu_205_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_249_ap_start = 1'b1;
    end else begin
        grp_fu_249_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        m_ce0 = 1'b1;
    end else begin
        m_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state16))) begin
        out_0_address0 = out_0_addr_reg_717;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        out_0_address0 = arrayidx121_sum_cast_fu_292_p1;
    end else begin
        out_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state16))) begin
        out_0_ce0 = 1'b1;
    end else begin
        out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        out_0_d0 = conv2221_reg_151;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        out_0_d0 = 32'd0;
    end else begin
        out_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state13) & (icmp_ln88_fu_286_p2 == 1'd1)) | ((1'b1 == ap_CS_fsm_state16) & (icmp_ln91_fu_308_p2 == 1'd1)))) begin
        out_0_we0 = 1'b1;
    end else begin
        out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln83_fu_189_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln87_fu_243_p2 == 1'd1) | (tmp_3_fu_205_p3 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln91_fu_308_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln83_fu_195_p2 = (d_fu_98 + 4'd1);

assign add_ln85_fu_213_p2 = (i_reg_129 + 8'd1);

assign add_ln87_fu_237_p2 = ($signed(i_cast1_cast_fu_223_p1) + $signed(8'd130));

assign add_ln91_fu_314_p2 = (j_reg_140 + 2'd1);

assign add_ln93_fu_337_p2 = (tmp2_fu_329_p3 + zext_ln83_reg_669);

assign and_ln18_1_fu_560_p2 = (xor_ln1007_fu_441_p2 & icmp_ln1003_4_fu_435_p2);

assign and_ln18_2_fu_566_p2 = (and_ln18_fu_459_p2 & and_ln18_1_fu_560_p2);

assign and_ln18_3_fu_599_p2 = (icmp_ln1007_fu_453_p2 & icmp_ln1003_5_fu_447_p2);

assign and_ln18_4_fu_611_p2 = (xor_ln18_fu_605_p2 & and_ln18_1_fu_560_p2);

assign and_ln18_5_fu_648_p2 = (or_ln18_1_fu_642_p2 & and_ln18_fu_459_p2);

assign and_ln18_fu_459_p2 = (icmp_ln1007_fu_453_p2 & icmp_ln1003_5_fu_447_p2);

assign and_ln25_1_fu_465_p2 = (icmp_ln1003_3_fu_429_p2 & icmp_ln1003_2_fu_423_p2);

assign and_ln25_2_fu_477_p2 = (xor_ln25_fu_471_p2 & and_ln25_fu_417_p2);

assign and_ln25_3_fu_580_p2 = (icmp_ln1003_3_fu_429_p2 & and_ln25_fu_417_p2);

assign and_ln25_4_fu_586_p2 = (icmp_ln1003_2_fu_423_p2 & and_ln25_3_fu_580_p2);

assign and_ln25_fu_417_p2 = (icmp_ln1003_fu_405_p2 & icmp_ln1003_1_fu_411_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign arrayidx121_sum_cast_fu_292_p1 = arrayidx121_sum_reg_709;

assign arrayidx121_sum_fu_273_p2 = (tmp_2_fu_265_p3 + zext_ln83_1_reg_674);

assign bitcast_ln483_2_fu_359_p1 = m_q0;

assign bitcast_ln483_fu_347_p1 = conv2221_reg_151;

assign data_V_1_fu_388_p1 = dc_1_reg_770;

assign data_V_fu_371_p1 = dc_reg_763;

assign empty_35_fu_219_p1 = i_reg_129[6:0];

assign empty_36_fu_303_p2 = (p_shl_fu_296_p3 - zext_ln85_reg_687);

assign grp_fu_1006_p_ce = 1'b1;

assign grp_fu_1006_p_din0 = res_5_fu_654_p3;

assign grp_fu_1009_p_ce = 1'b1;

assign grp_fu_1009_p_din0 = m_q0;

assign grp_fu_249_p1 = 7'd3;

assign grp_fu_385_p_ce = 1'b1;

assign grp_fu_385_p_din0 = conv2221_reg_151;

assign i_cast1_cast_fu_223_p1 = empty_35_fu_219_p1;

assign icmp_ln1003_1_fu_411_p2 = ((tmp_5_fu_384_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1003_2_fu_423_p2 = ((tmp_6_fu_391_p4 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln1003_3_fu_429_p2 = ((tmp_7_fu_401_p1 == 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln1003_4_fu_435_p2 = ((tmp_fu_374_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln1003_5_fu_447_p2 = ((tmp_6_fu_391_p4 == 11'd2047) ? 1'b1 : 1'b0);

assign icmp_ln1003_fu_405_p2 = ((tmp_fu_374_p4 == 11'd0) ? 1'b1 : 1'b0);

assign icmp_ln1007_fu_453_p2 = ((tmp_7_fu_401_p1 != 52'd0) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_189_p2 = ((d_fu_98 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_243_p2 = ((add_ln87_fu_237_p2 < 8'd3) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_286_p2 = ((trunc_ln88_fu_282_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_308_p2 = ((j_reg_140 == 2'd3) ? 1'b1 : 1'b0);

assign j_cast_fu_320_p1 = j_reg_140;

assign m_address0 = zext_ln93_fu_342_p1;

assign mul_fu_231_p0 = mul_fu_231_p00;

assign mul_fu_231_p00 = empty_35_fu_219_p1;

assign mul_fu_231_p1 = 15'd171;

assign or_ln18_1_fu_642_p2 = (xor_ln18_2_fu_636_p2 | and_ln25_2_fu_477_p2);

assign or_ln18_fu_630_p2 = (xor_ln18_1_fu_624_p2 | icmp_ln1003_1_fu_411_p2);

assign p_Result_2_fu_483_p4 = {|(1'd1), tmp_5_fu_384_p1[51 - 1:0]};

assign p_Result_3_fu_493_p4 = {{{p_Result_s_reg_750}, {11'd2047}}, {p_Result_2_fu_483_p4}};

assign p_Result_4_fu_510_p3 = {{p_Result_s_reg_750}, {trunc_ln368_fu_506_p1}};

assign p_Result_5_fu_521_p3 = {{p_Result_1_reg_757}, {trunc_ln368_1_fu_517_p1}};

assign p_shl_fu_296_p3 = {{empty_35_reg_700}, {2'd0}};

assign res_1_fu_554_p3 = ((ymaggreater_1_fu_547_p3[0:0] == 1'b1) ? dc_1_reg_770 : dc_reg_763);

assign res_2_fu_572_p3 = ((and_ln18_2_fu_566_p2[0:0] == 1'b1) ? res_fu_502_p1 : res_1_fu_554_p3);

assign res_3_fu_592_p3 = ((and_ln25_4_fu_586_p2[0:0] == 1'b1) ? dc_1_reg_770 : res_2_fu_572_p3);

assign res_4_fu_617_p3 = ((and_ln18_4_fu_611_p2[0:0] == 1'b1) ? dc_1_reg_770 : res_3_fu_592_p3);

assign res_5_fu_654_p3 = ((and_ln18_5_fu_648_p2[0:0] == 1'b1) ? dc_reg_763 : res_4_fu_617_p3);

assign res_fu_502_p1 = p_Result_3_fu_493_p4;

assign select_ln39_fu_540_p3 = ((p_Result_s_reg_750[0:0] == 1'b1) ? xor_ln39_fu_534_p2 : ymaggreater_fu_528_p2);

assign tmp2_fu_329_p3 = {{tmp3_fu_324_p2}, {3'd0}};

assign tmp3_fu_324_p2 = (j_cast_fu_320_p1 + empty_36_reg_722);

assign tmp_1_fu_255_p4 = {{mul_fu_231_p2[14:9]}};

assign tmp_2_fu_265_p3 = {{tmp_1_fu_255_p4}, {3'd0}};

assign tmp_3_fu_205_p3 = i_reg_129[32'd7];

assign tmp_5_fu_384_p1 = data_V_fu_371_p1[51:0];

assign tmp_6_fu_391_p4 = {{data_V_1_fu_388_p1[62:52]}};

assign tmp_7_fu_401_p1 = data_V_1_fu_388_p1[51:0];

assign tmp_fu_374_p4 = {{data_V_fu_371_p1[62:52]}};

assign trunc_ln368_1_fu_517_p1 = data_V_1_fu_388_p1[62:0];

assign trunc_ln368_fu_506_p1 = data_V_fu_371_p1[62:0];

assign trunc_ln88_fu_282_p1 = grp_fu_249_p2[1:0];

assign xor_ln1007_fu_441_p2 = (icmp_ln1003_1_fu_411_p2 ^ 1'd1);

assign xor_ln18_1_fu_624_p2 = (icmp_ln1003_4_fu_435_p2 ^ 1'd1);

assign xor_ln18_2_fu_636_p2 = (or_ln18_fu_630_p2 ^ and_ln25_fu_417_p2);

assign xor_ln18_fu_605_p2 = (1'd1 ^ and_ln18_3_fu_599_p2);

assign xor_ln25_fu_471_p2 = (1'd1 ^ and_ln25_1_fu_465_p2);

assign xor_ln39_fu_534_p2 = (ymaggreater_fu_528_p2 ^ 1'd1);

assign ymaggreater_1_fu_547_p3 = ((p_Result_1_reg_757[0:0] == 1'b1) ? select_ln39_fu_540_p3 : ymaggreater_fu_528_p2);

assign ymaggreater_fu_528_p2 = (($signed(p_Result_4_fu_510_p3) < $signed(p_Result_5_fu_521_p3)) ? 1'b1 : 1'b0);

assign zext_ln83_1_fu_185_p1 = d_fu_98;

assign zext_ln83_fu_181_p1 = d_fu_98;

assign zext_ln85_fu_201_p1 = i_reg_129;

assign zext_ln93_fu_342_p1 = add_ln93_fu_337_p2;

always @ (posedge ap_clk) begin
    zext_ln83_reg_669[11:4] <= 8'b00000000;
    zext_ln83_1_reg_674[8:4] <= 5'b00000;
    zext_ln85_reg_687[8] <= 1'b0;
end

endmodule //master_maxPool_1
