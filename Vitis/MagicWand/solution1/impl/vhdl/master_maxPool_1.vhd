-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity master_maxPool_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    m_ce0 : OUT STD_LOGIC;
    m_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
    out_0_ce0 : OUT STD_LOGIC;
    out_0_we0 : OUT STD_LOGIC;
    out_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of master_maxPool_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv15_AB : STD_LOGIC_VECTOR (14 downto 0) := "000000010101011";
    constant ap_const_lv8_82 : STD_LOGIC_VECTOR (7 downto 0) := "10000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal add_ln77_fu_119_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln77_reg_250 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln77_fu_125_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln77_reg_255 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln77_fu_113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln77_fu_129_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln77_reg_260 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln78_fu_141_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln78_reg_268 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln78_fu_147_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln78_reg_273 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_133_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_30_fu_151_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_30_reg_278 : STD_LOGIC_VECTOR (6 downto 0);
    signal arrayidx121_sum_fu_205_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal arrayidx121_sum_reg_287 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln79_fu_175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_0_addr_reg_296 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal empty_31_fu_235_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_31_reg_301 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_0_load_reg_306 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start : STD_LOGIC;
    signal grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_done : STD_LOGIC;
    signal grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_idle : STD_LOGIC;
    signal grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_ready : STD_LOGIC;
    signal grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_ce0 : STD_LOGIC;
    signal grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_we0 : STD_LOGIC;
    signal grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_m_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_m_ce0 : STD_LOGIC;
    signal i_reg_82 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal arrayidx121_sum_cast_fu_224_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal d_fu_64 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln80_fu_218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal mul_fu_163_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_fu_163_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_cast1_cast_fu_155_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln79_fu_169_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_181_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_fu_163_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_1_fu_187_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_2_fu_197_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_181_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln80_fu_214_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_shl_fu_228_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_181_ap_start : STD_LOGIC;
    signal grp_fu_181_ap_done : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal mul_fu_163_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component master_maxPool_1_Pipeline_VITIS_LOOP_83_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
        out_0_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        out_0_ce0 : OUT STD_LOGIC;
        out_0_we0 : OUT STD_LOGIC;
        out_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        arrayidx121_sum_cast : IN STD_LOGIC_VECTOR (8 downto 0);
        empty : IN STD_LOGIC_VECTOR (8 downto 0);
        zext_ln77 : IN STD_LOGIC_VECTOR (2 downto 0);
        m_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        m_ce0 : OUT STD_LOGIC;
        m_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component master_mul_7ns_9ns_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component master_urem_7ns_3ns_2_11_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;



begin
    grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93 : component master_maxPool_1_Pipeline_VITIS_LOOP_83_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start,
        ap_done => grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_done,
        ap_idle => grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_idle,
        ap_ready => grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_ready,
        out_0_load => out_0_load_reg_306,
        out_0_address0 => grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_address0,
        out_0_ce0 => grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_ce0,
        out_0_we0 => grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_we0,
        out_0_d0 => grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_d0,
        arrayidx121_sum_cast => arrayidx121_sum_reg_287,
        empty => empty_31_reg_301,
        zext_ln77 => trunc_ln77_reg_255,
        m_address0 => grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_m_address0,
        m_ce0 => grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_m_ce0,
        m_q0 => m_q0);

    mul_7ns_9ns_15_1_1_U25 : component master_mul_7ns_9ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 9,
        dout_WIDTH => 15)
    port map (
        din0 => mul_fu_163_p0,
        din1 => mul_fu_163_p1,
        dout => mul_fu_163_p2);

    urem_7ns_3ns_2_11_seq_1_U26 : component master_urem_7ns_3ns_2_11_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 11,
        din0_WIDTH => 7,
        din1_WIDTH => 3,
        dout_WIDTH => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_181_ap_start,
        done => grp_fu_181_ap_done,
        din0 => empty_30_fu_151_p1,
        din1 => grp_fu_181_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_181_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_ready = ap_const_logic_1)) then 
                    grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    d_fu_64_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                d_fu_64 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln79_fu_175_p2 = ap_const_lv1_1) or (tmp_fu_133_p3 = ap_const_lv1_1)))) then 
                d_fu_64 <= add_ln77_reg_250;
            end if; 
        end if;
    end process;

    i_reg_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_fu_113_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_reg_82 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_done = ap_const_logic_1))) then 
                i_reg_82 <= add_ln78_reg_268;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln77_reg_250 <= add_ln77_fu_119_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln78_reg_268 <= add_ln78_fu_141_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_fu_175_p2 = ap_const_lv1_0) and (tmp_fu_133_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                arrayidx121_sum_reg_287 <= arrayidx121_sum_fu_205_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_133_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                empty_30_reg_278 <= empty_30_fu_151_p1;
                    zext_ln78_reg_273(7 downto 0) <= zext_ln78_fu_147_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                empty_31_reg_301 <= empty_31_fu_235_p2;
                out_0_addr_reg_296 <= arrayidx121_sum_cast_fu_224_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                out_0_load_reg_306 <= out_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln77_fu_113_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                trunc_ln77_reg_255 <= trunc_ln77_fu_125_p1;
                    zext_ln77_reg_260(3 downto 0) <= zext_ln77_fu_129_p1(3 downto 0);
            end if;
        end if;
    end process;
    zext_ln77_reg_260(8 downto 4) <= "00000";
    zext_ln78_reg_273(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln77_fu_113_p2, ap_CS_fsm_state3, tmp_fu_133_p3, icmp_ln79_fu_175_p2, grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_done, ap_CS_fsm_state17)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln77_fu_113_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and ((icmp_ln79_fu_175_p2 = ap_const_lv1_1) or (tmp_fu_133_p3 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln77_fu_119_p2 <= std_logic_vector(unsigned(d_fu_64) + unsigned(ap_const_lv4_1));
    add_ln78_fu_141_p2 <= std_logic_vector(unsigned(i_reg_82) + unsigned(ap_const_lv8_1));
    add_ln79_fu_169_p2 <= std_logic_vector(unsigned(i_cast1_cast_fu_155_p1) + unsigned(ap_const_lv8_82));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_done)
    begin
        if ((grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln77_fu_113_p2)
    begin
        if ((((icmp_ln77_fu_113_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln77_fu_113_p2)
    begin
        if (((icmp_ln77_fu_113_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    arrayidx121_sum_cast_fu_224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(arrayidx121_sum_reg_287),64));
    arrayidx121_sum_fu_205_p2 <= std_logic_vector(unsigned(tmp_2_fu_197_p3) + unsigned(zext_ln77_reg_260));
    empty_30_fu_151_p1 <= i_reg_82(7 - 1 downto 0);
    empty_31_fu_235_p2 <= std_logic_vector(unsigned(p_shl_fu_228_p3) - unsigned(zext_ln78_reg_273));

    grp_fu_181_ap_start_assign_proc : process(ap_CS_fsm_state3, tmp_fu_133_p3, icmp_ln79_fu_175_p2)
    begin
        if (((icmp_ln79_fu_175_p2 = ap_const_lv1_0) and (tmp_fu_133_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_fu_181_ap_start <= ap_const_logic_1;
        else 
            grp_fu_181_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_181_p1 <= ap_const_lv7_3(3 - 1 downto 0);
    grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start <= grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start_reg;
    i_cast1_cast_fu_155_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_30_fu_151_p1),8));
    icmp_ln77_fu_113_p2 <= "1" when (d_fu_64 = ap_const_lv4_8) else "0";
    icmp_ln79_fu_175_p2 <= "1" when (unsigned(add_ln79_fu_169_p2) < unsigned(ap_const_lv8_3)) else "0";
    icmp_ln80_fu_218_p2 <= "1" when (trunc_ln80_fu_214_p1 = ap_const_lv2_0) else "0";
    m_address0 <= grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_m_address0;
    m_ce0 <= grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_m_ce0;
    mul_fu_163_p0 <= mul_fu_163_p00(7 - 1 downto 0);
    mul_fu_163_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_30_fu_151_p1),15));
    mul_fu_163_p1 <= ap_const_lv15_AB(9 - 1 downto 0);

    out_0_address0_assign_proc : process(out_0_addr_reg_296, ap_CS_fsm_state13, grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_address0, ap_CS_fsm_state17, arrayidx121_sum_cast_fu_224_p1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            out_0_address0 <= out_0_addr_reg_296;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            out_0_address0 <= arrayidx121_sum_cast_fu_224_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_0_address0 <= grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_address0;
        else 
            out_0_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    out_0_ce0_assign_proc : process(ap_CS_fsm_state13, grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_ce0, ap_CS_fsm_state17, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            out_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_0_ce0 <= grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_ce0;
        else 
            out_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_0_d0_assign_proc : process(ap_CS_fsm_state13, grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_d0, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            out_0_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_0_d0 <= grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_d0;
        else 
            out_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_0_we0_assign_proc : process(ap_CS_fsm_state13, grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_we0, ap_CS_fsm_state17, icmp_ln80_fu_218_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln80_fu_218_p2 = ap_const_lv1_1))) then 
            out_0_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            out_0_we0 <= grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_we0;
        else 
            out_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_shl_fu_228_p3 <= (empty_30_reg_278 & ap_const_lv2_0);
    tmp_1_fu_187_p4 <= mul_fu_163_p2(14 downto 9);
    tmp_2_fu_197_p3 <= (tmp_1_fu_187_p4 & ap_const_lv3_0);
    tmp_fu_133_p3 <= i_reg_82(7 downto 7);
    trunc_ln77_fu_125_p1 <= d_fu_64(3 - 1 downto 0);
    trunc_ln80_fu_214_p1 <= grp_fu_181_p2(2 - 1 downto 0);
    zext_ln77_fu_129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(d_fu_64),9));
    zext_ln78_fu_147_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_82),9));
end behav;
