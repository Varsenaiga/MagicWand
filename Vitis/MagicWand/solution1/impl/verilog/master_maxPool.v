// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module master_maxPool (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_0_address0,
        m_0_ce0,
        m_0_q0,
        out_0_address0,
        out_0_ce0,
        out_0_we0,
        out_0_d0,
        out_0_q0,
        grp_fu_945_p_din0,
        grp_fu_945_p_dout0,
        grp_fu_945_p_ce
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] m_0_address0;
output   m_0_ce0;
input  [31:0] m_0_q0;
output  [7:0] out_0_address0;
output   out_0_ce0;
output   out_0_we0;
output  [31:0] out_0_d0;
input  [31:0] out_0_q0;
output  [31:0] grp_fu_945_p_din0;
input  [63:0] grp_fu_945_p_dout0;
output   grp_fu_945_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_0_ce0;
reg[7:0] out_0_address0;
reg out_0_ce0;
reg out_0_we0;
reg[31:0] out_0_d0;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [9:0] add_ln77_1_fu_144_p2;
reg   [9:0] add_ln77_1_reg_337;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln78_fu_153_p2;
reg   [0:0] icmp_ln78_reg_342;
wire   [0:0] icmp_ln77_fu_138_p2;
wire   [5:0] select_ln77_fu_159_p3;
reg   [5:0] select_ln77_reg_347;
reg   [7:0] out_0_addr_reg_358;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg   [0:0] tmp_reg_373;
wire    grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_start;
wire    grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_done;
wire    grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_idle;
wire    grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_ready;
wire   [62:0] grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_data_V_2;
wire   [31:0] grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_conv2221_out;
wire    grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_conv2221_out_ap_vld;
reg    grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_start_reg;
reg   [16:0] ap_NS_fsm;
wire    ap_NS_fsm_state13;
wire    ap_CS_fsm_state13;
reg   [31:0] conv2221_loc_fu_74;
wire    ap_CS_fsm_state16;
wire   [63:0] arrayidx121_sum_cast_fu_240_p1;
wire   [63:0] zext_ln84_fu_258_p1;
reg   [5:0] i_fu_62;
wire   [5:0] add_ln78_fu_263_p2;
reg   [4:0] d_fu_66;
wire   [4:0] select_ln77_1_fu_182_p3;
reg   [9:0] indvar_flatten_fu_70;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln80_fu_210_p2;
wire   [5:0] grp_fu_167_p0;
wire   [2:0] grp_fu_167_p1;
wire   [4:0] add_ln77_fu_176_p2;
wire   [5:0] mul_fu_200_p0;
wire   [7:0] mul_fu_200_p1;
wire   [1:0] grp_fu_167_p2;
wire   [1:0] trunc_ln80_fu_206_p1;
wire   [12:0] mul_fu_200_p2;
wire   [3:0] tmp_7_fu_216_p4;
wire   [7:0] tmp_8_fu_226_p3;
wire   [7:0] zext_ln77_1_fu_193_p1;
wire   [7:0] arrayidx121_sum_fu_234_p2;
wire   [9:0] tmp2_fu_245_p3;
wire   [9:0] zext_ln77_fu_189_p1;
wire   [9:0] add_ln84_fu_252_p2;
wire   [31:0] bitcast_ln483_4_fu_282_p1;
wire   [63:0] bitcast_ln483_fu_294_p1;
reg    grp_fu_167_ap_start;
wire    grp_fu_167_ap_done;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire   [12:0] mul_fu_200_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_start_reg = 1'b0;
end

master_maxPool_Pipeline_VITIS_LOOP_83_3 grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_start),
    .ap_done(grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_done),
    .ap_idle(grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_idle),
    .ap_ready(grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_ready),
    .out_0_load(out_0_q0),
    .data_V_2(grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_data_V_2),
    .p_Result_6(tmp_reg_373),
    .dc_2(grp_fu_945_p_dout0),
    .conv2221_out(grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_conv2221_out),
    .conv2221_out_ap_vld(grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_conv2221_out_ap_vld)
);

master_urem_6ns_3ns_2_10_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 10 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_6ns_3ns_2_10_seq_1_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_167_ap_start),
    .done(grp_fu_167_ap_done),
    .din0(grp_fu_167_p0),
    .din1(grp_fu_167_p1),
    .ce(1'b1),
    .dout(grp_fu_167_p2)
);

master_mul_6ns_8ns_13_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
mul_6ns_8ns_13_1_1_U81(
    .din0(mul_fu_200_p0),
    .din1(mul_fu_200_p1),
    .dout(mul_fu_200_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state12) & (1'b1 == ap_NS_fsm_state13))) begin
            grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_start_reg <= 1'b1;
        end else if ((grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_ready == 1'b1)) begin
            grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        d_fu_66 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        d_fu_66 <= select_ln77_1_fu_182_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_62 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        i_fu_62 <= add_ln78_fu_263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_fu_70 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        indvar_flatten_fu_70 <= add_ln77_1_reg_337;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln77_1_reg_337 <= add_ln77_1_fu_144_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_conv2221_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
        conv2221_loc_fu_74 <= grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_conv2221_out;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln78_reg_342 <= icmp_ln78_fu_153_p2;
        select_ln77_reg_347 <= select_ln77_fu_159_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        out_0_addr_reg_358 <= arrayidx121_sum_cast_fu_240_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_reg_373 <= bitcast_ln483_4_fu_282_p1[32'd31];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((icmp_ln77_fu_138_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln77_fu_138_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln77_fu_138_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_167_ap_start = 1'b1;
    end else begin
        grp_fu_167_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        m_0_ce0 = 1'b1;
    end else begin
        m_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state17))) begin
        out_0_address0 = out_0_addr_reg_358;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        out_0_address0 = arrayidx121_sum_cast_fu_240_p1;
    end else begin
        out_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state17))) begin
        out_0_ce0 = 1'b1;
    end else begin
        out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        out_0_d0 = conv2221_loc_fu_74;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        out_0_d0 = 32'd0;
    end else begin
        out_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln80_fu_210_p2 == 1'd1)))) begin
        out_0_we0 = 1'b1;
    end else begin
        out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln77_fu_138_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln77_1_fu_144_p2 = (indvar_flatten_fu_70 + 10'd1);

assign add_ln77_fu_176_p2 = (d_fu_66 + 5'd1);

assign add_ln78_fu_263_p2 = (select_ln77_reg_347 + 6'd1);

assign add_ln84_fu_252_p2 = (tmp2_fu_245_p3 + zext_ln77_fu_189_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_NS_fsm_state13 = ap_NS_fsm[32'd12];

assign arrayidx121_sum_cast_fu_240_p1 = arrayidx121_sum_fu_234_p2;

assign arrayidx121_sum_fu_234_p2 = (tmp_8_fu_226_p3 + zext_ln77_1_fu_193_p1);

assign bitcast_ln483_4_fu_282_p1 = m_0_q0;

assign bitcast_ln483_fu_294_p1 = grp_fu_945_p_dout0;

assign grp_fu_167_p0 = ((icmp_ln78_fu_153_p2[0:0] == 1'b1) ? i_fu_62 : 6'd0);

assign grp_fu_167_p1 = 6'd3;

assign grp_fu_945_p_ce = 1'b1;

assign grp_fu_945_p_din0 = m_0_q0;

assign grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_start = grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_ap_start_reg;

assign grp_maxPool_Pipeline_VITIS_LOOP_83_3_fu_105_data_V_2 = bitcast_ln483_fu_294_p1[62:0];

assign icmp_ln77_fu_138_p2 = ((indvar_flatten_fu_70 == 10'd672) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_153_p2 = ((i_fu_62 != 6'd42) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_210_p2 = ((trunc_ln80_fu_206_p1 == 2'd0) ? 1'b1 : 1'b0);

assign m_0_address0 = zext_ln84_fu_258_p1;

assign mul_fu_200_p0 = mul_fu_200_p00;

assign mul_fu_200_p00 = select_ln77_reg_347;

assign mul_fu_200_p1 = 13'd86;

assign select_ln77_1_fu_182_p3 = ((icmp_ln78_reg_342[0:0] == 1'b1) ? d_fu_66 : add_ln77_fu_176_p2);

assign select_ln77_fu_159_p3 = ((icmp_ln78_fu_153_p2[0:0] == 1'b1) ? i_fu_62 : 6'd0);

assign tmp2_fu_245_p3 = {{select_ln77_reg_347}, {4'd0}};

assign tmp_7_fu_216_p4 = {{mul_fu_200_p2[11:8]}};

assign tmp_8_fu_226_p3 = {{tmp_7_fu_216_p4}, {4'd0}};

assign trunc_ln80_fu_206_p1 = grp_fu_167_p2[1:0];

assign zext_ln77_1_fu_193_p1 = select_ln77_1_fu_182_p3;

assign zext_ln77_fu_189_p1 = select_ln77_1_fu_182_p3;

assign zext_ln84_fu_258_p1 = add_ln84_fu_252_p2;

endmodule //master_maxPool
