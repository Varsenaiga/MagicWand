// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module master_maxPool_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_address0,
        m_ce0,
        m_q0,
        out_0_address0,
        out_0_ce0,
        out_0_we0,
        out_0_d0,
        out_0_q0
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] m_address0;
output   m_ce0;
input  [31:0] m_q0;
output  [8:0] out_0_address0;
output   out_0_ce0;
output   out_0_we0;
output  [31:0] out_0_d0;
input  [31:0] out_0_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] out_0_address0;
reg out_0_ce0;
reg out_0_we0;
reg[31:0] out_0_d0;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] add_ln77_fu_119_p2;
reg   [3:0] add_ln77_reg_250;
wire    ap_CS_fsm_state2;
wire   [2:0] trunc_ln77_fu_125_p1;
reg   [2:0] trunc_ln77_reg_255;
wire   [0:0] icmp_ln77_fu_113_p2;
wire   [8:0] zext_ln77_fu_129_p1;
reg   [8:0] zext_ln77_reg_260;
wire   [7:0] add_ln78_fu_141_p2;
reg   [7:0] add_ln78_reg_268;
wire    ap_CS_fsm_state3;
wire   [8:0] zext_ln78_fu_147_p1;
reg   [8:0] zext_ln78_reg_273;
wire   [0:0] tmp_fu_133_p3;
wire   [6:0] empty_30_fu_151_p1;
reg   [6:0] empty_30_reg_278;
wire   [8:0] arrayidx121_sum_fu_205_p2;
reg   [8:0] arrayidx121_sum_reg_287;
wire   [0:0] icmp_ln79_fu_175_p2;
reg   [8:0] out_0_addr_reg_296;
wire    ap_CS_fsm_state13;
wire   [8:0] empty_31_fu_235_p2;
reg   [8:0] empty_31_reg_301;
reg   [31:0] out_0_load_reg_306;
wire    ap_CS_fsm_state15;
wire    grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start;
wire    grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_done;
wire    grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_idle;
wire    grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_ready;
wire   [8:0] grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_address0;
wire    grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_ce0;
wire    grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_we0;
wire   [31:0] grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_d0;
wire   [11:0] grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_m_address0;
wire    grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_m_ce0;
reg   [7:0] i_reg_82;
wire    ap_CS_fsm_state17;
reg    grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start_reg;
wire    ap_CS_fsm_state16;
wire   [63:0] arrayidx121_sum_cast_fu_224_p1;
reg   [3:0] d_fu_64;
wire   [0:0] icmp_ln80_fu_218_p2;
wire    ap_CS_fsm_state14;
wire   [6:0] mul_fu_163_p0;
wire   [8:0] mul_fu_163_p1;
wire   [7:0] i_cast1_cast_fu_155_p1;
wire   [7:0] add_ln79_fu_169_p2;
wire   [2:0] grp_fu_181_p1;
wire   [14:0] mul_fu_163_p2;
wire   [5:0] tmp_1_fu_187_p4;
wire   [8:0] tmp_2_fu_197_p3;
wire   [1:0] grp_fu_181_p2;
wire   [1:0] trunc_ln80_fu_214_p1;
wire   [8:0] p_shl_fu_228_p3;
reg    grp_fu_181_ap_start;
wire    grp_fu_181_ap_done;
reg   [16:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
wire   [14:0] mul_fu_163_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start_reg = 1'b0;
end

master_maxPool_1_Pipeline_VITIS_LOOP_83_3 grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start),
    .ap_done(grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_done),
    .ap_idle(grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_idle),
    .ap_ready(grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_ready),
    .out_0_load(out_0_load_reg_306),
    .out_0_address0(grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_address0),
    .out_0_ce0(grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_ce0),
    .out_0_we0(grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_we0),
    .out_0_d0(grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_d0),
    .arrayidx121_sum_cast(arrayidx121_sum_reg_287),
    .empty(empty_31_reg_301),
    .zext_ln77(trunc_ln77_reg_255),
    .m_address0(grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_m_address0),
    .m_ce0(grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_m_ce0),
    .m_q0(m_q0)
);

master_mul_7ns_9ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 15 ))
mul_7ns_9ns_15_1_1_U25(
    .din0(mul_fu_163_p0),
    .din1(mul_fu_163_p1),
    .dout(mul_fu_163_p2)
);

master_urem_7ns_3ns_2_11_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 11 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_7ns_3ns_2_11_seq_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_181_ap_start),
    .done(grp_fu_181_ap_done),
    .din0(empty_30_fu_151_p1),
    .din1(grp_fu_181_p1),
    .ce(1'b1),
    .dout(grp_fu_181_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start_reg <= 1'b1;
        end else if ((grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_ready == 1'b1)) begin
            grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        d_fu_64 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln79_fu_175_p2 == 1'd1) | (tmp_fu_133_p3 == 1'd1)))) begin
        d_fu_64 <= add_ln77_reg_250;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_fu_113_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_reg_82 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state17) & (grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_done == 1'b1))) begin
        i_reg_82 <= add_ln78_reg_268;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln77_reg_250 <= add_ln77_fu_119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln78_reg_268 <= add_ln78_fu_141_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_175_p2 == 1'd0) & (tmp_fu_133_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        arrayidx121_sum_reg_287 <= arrayidx121_sum_fu_205_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_fu_133_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        empty_30_reg_278 <= empty_30_fu_151_p1;
        zext_ln78_reg_273[7 : 0] <= zext_ln78_fu_147_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        empty_31_reg_301 <= empty_31_fu_235_p2;
        out_0_addr_reg_296 <= arrayidx121_sum_cast_fu_224_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        out_0_load_reg_306 <= out_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln77_fu_113_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln77_reg_255 <= trunc_ln77_fu_125_p1;
        zext_ln77_reg_260[3 : 0] <= zext_ln77_fu_129_p1[3 : 0];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

always @ (*) begin
    if ((grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_done == 1'b0)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((icmp_ln77_fu_113_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln77_fu_113_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_fu_175_p2 == 1'd0) & (tmp_fu_133_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_181_ap_start = 1'b1;
    end else begin
        grp_fu_181_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        out_0_address0 = out_0_addr_reg_296;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        out_0_address0 = arrayidx121_sum_cast_fu_224_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        out_0_address0 = grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_address0;
    end else begin
        out_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        out_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        out_0_ce0 = grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_ce0;
    end else begin
        out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        out_0_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        out_0_d0 = grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_d0;
    end else begin
        out_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln80_fu_218_p2 == 1'd1))) begin
        out_0_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        out_0_we0 = grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_out_0_we0;
    end else begin
        out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln77_fu_113_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln79_fu_175_p2 == 1'd1) | (tmp_fu_133_p3 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln77_fu_119_p2 = (d_fu_64 + 4'd1);

assign add_ln78_fu_141_p2 = (i_reg_82 + 8'd1);

assign add_ln79_fu_169_p2 = ($signed(i_cast1_cast_fu_155_p1) + $signed(8'd130));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign arrayidx121_sum_cast_fu_224_p1 = arrayidx121_sum_reg_287;

assign arrayidx121_sum_fu_205_p2 = (tmp_2_fu_197_p3 + zext_ln77_reg_260);

assign empty_30_fu_151_p1 = i_reg_82[6:0];

assign empty_31_fu_235_p2 = (p_shl_fu_228_p3 - zext_ln78_reg_273);

assign grp_fu_181_p1 = 7'd3;

assign grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start = grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_ap_start_reg;

assign i_cast1_cast_fu_155_p1 = empty_30_fu_151_p1;

assign icmp_ln77_fu_113_p2 = ((d_fu_64 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_175_p2 = ((add_ln79_fu_169_p2 < 8'd3) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_218_p2 = ((trunc_ln80_fu_214_p1 == 2'd0) ? 1'b1 : 1'b0);

assign m_address0 = grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_m_address0;

assign m_ce0 = grp_maxPool_1_Pipeline_VITIS_LOOP_83_3_fu_93_m_ce0;

assign mul_fu_163_p0 = mul_fu_163_p00;

assign mul_fu_163_p00 = empty_30_fu_151_p1;

assign mul_fu_163_p1 = 15'd171;

assign p_shl_fu_228_p3 = {{empty_30_reg_278}, {2'd0}};

assign tmp_1_fu_187_p4 = {{mul_fu_163_p2[14:9]}};

assign tmp_2_fu_197_p3 = {{tmp_1_fu_187_p4}, {3'd0}};

assign tmp_fu_133_p3 = i_reg_82[32'd7];

assign trunc_ln77_fu_125_p1 = d_fu_64[2:0];

assign trunc_ln80_fu_214_p1 = grp_fu_181_p2[1:0];

assign zext_ln77_fu_129_p1 = d_fu_64;

assign zext_ln78_fu_147_p1 = i_reg_82;

always @ (posedge ap_clk) begin
    zext_ln77_reg_260[8:4] <= 5'b00000;
    zext_ln78_reg_273[8] <= 1'b0;
end

endmodule //master_maxPool_1
